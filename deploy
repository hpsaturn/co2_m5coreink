#!/bin/bash

######################################################
# CanAirIO deploy release utility
#
# Author: @hpsaturn
# 2021
######################################################

SRC_REV=`cat platformio.ini | grep 'revision =' | awk '{print $3}'`
SRC_VER=`cat platformio.ini | grep 'version =' | awk '{print $3}' | sed 's/"//g'`

RELDIR="releases"
GITHUB_OWNER=hpsaturn
GITHUB_REPO=${PWD##*/}
TARGET=M5COREINK
RELNAME="${TARGET}_air_station_${SRC_VER}.${SRC_REV}"
INSDIR=$RELDIR/installer
BINDIR="binaries"
OUTDIR=".pio/build"
DATE=`date +%Y%m%d`

showHelp () {
  echo ""
  echo "************************************************"
  echo "** Build and deploy tag and release           **"
  echo "************************************************"
  echo ""
  echo "Usage alternatives:"
  echo ""
  echo "./deploy_release test"
  echo "./deploy_release clean"
  echo "./deploy_release build"
  echo "./deploy_release github"
  echo "./deploy_release pio"
  echo ""
}

validate_branch () {
  current_branch=`git rev-parse --abbrev-ref HEAD` 

  if [ ${current_branch} != "master" ]; then
    echo ""
    echo "Error: you are in ${current_branch} branch please change to master branch."
    echo ""
    exit 1
  fi 
}

clean () {
  rm -rf $INSDIR
  rm -f $INSDIR/$RELNAME.tar.gz
  rm -f $INSDIR/*.bin
}

runtest () {
  pio run --target clean && pio run 
}

updateInstallerBinaries () {
  echo ""
  echo "***********************************************"
  echo "** Update installer binaries.."
  echo "***********************************************"
  echo ""
  mkdir -p $INSDIR/system
  cp $OUTDIR/$TARGET/partitions.bin $INSDIR/system/
  cp ~/.platformio/packages/framework-arduinoespressif32/tools/partitions/boot_app0.bin $INSDIR/system/
  cp ~/.platformio/packages/framework-arduinoespressif32/tools/sdk/esp32/bin/bootloader_dio_40m.bin $INSDIR/system/
  cp ~/.platformio/packages/tool-esptoolpy/esptool.py $INSDIR/system/
  cp ~/.platformio/packages/framework-arduinoespressif32/tools/espota.py $INSDIR/system/
  curl https://raw.githubusercontent.com/kike-canaries/canairio_firmware/master/releases/installer/canairio_installer/install.sh -o $INSDIR/install.sh
  chmod 755 $INSDIR/install.sh
}


build () {
  echo ""
  echo "***********************************************"
  echo "** Building $1"
  echo "***********************************************"
  echo ""

  pio run -s -e $1

  echo ""
  echo "***********************************************"
  echo "** Firmware $1 output:"
  mkdir -p $INSDIR/system
  firmware_in=$OUTDIR/$1/firmware.bin
  firmware_out=$INSDIR/${RELNAME}.bin
  cp  $firmware_in $firmware_out
  echo -n "** MD5:"
  md5sum $firmware_out
  echo "***********************************************"
  echo ""
}


buildInstaller () {
  echo ""
  build $1
  updateInstallerBinaries
  cd $INSDIR
  tar zcf ../${RELNAME}.tar.gz .
  cd ../..
  rm -rf $INSDIR
  echo "***********************************************"
  echo -n "** MD5:"
  md5sum $RELDIR/${RELNAME}.tar.gz
  echo "***********************************************"
  echo ""
}

publish_release () {
  echo ""
  echo "***********************************************"
  echo "********** Publishing release *****************" 
  echo "***********************************************"
  echo ""
  COMMIT_LOG=`git log -1 --format='%ci %H %s'`
  github-release upload --owner ${GITHUB_OWNER} --repo ${GITHUB_REPO} --tag "${SRC_VER}.${SRC_REV}" --release-name "${SRC_VER}.${SRC_REV}" --body "${COMMIT_LOG}" $RELDIR/$RELNAME.tar.gz
  echo ""
  echo "***********************************************"
  echo "*************     done    *********************" 
  echo "***********************************************"
  echo ""
}

publish_pio () {
  pio package publish
}

if [ "$1" = "" ]; then
  showHelp
else
  validate_branch
  case "$1" in
    clean)
      clean
      ;;

    test)
      runtest 
      ;;

    help)
      showHelp
      ;;

    --help)
      showHelp
      ;;

    -help)
      showHelp
      ;;

    -h)
      showHelp
      ;;

    print)
      printOutput
      ;;

    publish)
      publish_release
      ;;

    github)
      publish_release
      ;;

    build)
      buildInstaller $TARGET
      ;;

    *)
      showHelp
      ;;
  esac
fi

exit 0

